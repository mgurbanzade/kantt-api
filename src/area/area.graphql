type Area {
  id: Int
  uuid: String
  title: String
  projects: [Project]
  subareas: [Area]
  parentId: Int
  parent: Area
  isArchived: Boolean
}

input CreateAreaInput {
  title: String!
  parentId: Int
}

input UpdateAreaInput {
  title: String
}

input AreaWhereInput {
  id: Int
  title: String
  parentId: Int
}

type Query {
  getAllAreas(where: AreaWhereInput): [Area]!
  getArea(uuid: String!): Area
  getArchivedAreas: [Area]!
}

type Mutation {
  createArea(createAreaInput: CreateAreaInput!): Area!
  updateArea(id: Int!, updateAreaInput: UpdateAreaInput!): Area!
  removeArea(id: Int!): Area
  archiveArea(id: Int!): Area
  unarchiveArea(id: Int!): Area
}
