type Project {
  id: Int
  uuid: String
  title: String
  description: String
  progress: Int
  isArchived: Boolean
  author: User
  authorId: Int
  boards: [Board]
  areas: [Area]
  tasks: [Task]
  subprojects: [Project]
  parentId: Int
  emoji: String
}

input CreateProjectInput {
  title: String!
  description: String!
  authorId: Int
}

input UpdateProjectInput {
  title: String
  description: String
  progress: Int
  isArchived: Boolean
  emoji: String
}

input ProjectWhereInput {
  id: Int
  title: String
  description: String
  progress: Int
  parentId: Int
  isArchived: Boolean
}

type Query {
  getAllProjects(where: ProjectWhereInput): [Project]!
  getProject(uuid: String!): Project
  getProjectWhere(where: ProjectWhereInput): Project
  getArchivedProjects: [Project]!
}

type Mutation {
  createProject(
    createProjectInput: CreateProjectInput!
    areaIds: [Int]
    parentId: Int
  ): Project!
  updateProject(
    uuid: String!
    updateProjectInput: UpdateProjectInput!
    areaIds: [Int]
  ): Project!
  removeProject(uuid: String!): Project
  archiveProject(uuid: String!): Project
  unarchiveProject(uuid: String!): Project
}
