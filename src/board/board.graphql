type Board {
  id: Int
  uuid: String
  title: String
  description: String
  isArchived: Boolean
  project: Project
  tasks: [Task]
  columns: [Column]
}

input CreateBoardInput {
  title: String!
  description: String
  authorId: Int
}

input UpdateBoardInput {
  title: String
  description: String
  progress: Int
  isArchived: Boolean
}

input BoardWhereInput {
  id: Int
  title: String
  description: String
  progress: Int
  isArchived: Boolean
}

type Query {
  getAllBoards(where: BoardWhereInput!): [Board]!
  getBoard(id: Int!): Board
}

type Mutation {
  createBoard(createBoardInput: CreateBoardInput!, projectId: Int!): Board!
  updateBoard(id: Int!, updateBoardInput: UpdateBoardInput!): Board!
  removeBoard(id: Int!): Board
}
