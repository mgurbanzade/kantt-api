name: Deploy to Digital Ocean Droplet

on:
  push:
    branches:
      - main # or any branch you want to deploy from

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install pnpm
        run: |
          npm install -g pnpm

      - name: Install Dependencies and Build
        run: |
          pnpm install
          pnpm run build

      - name: Archive Dist Folder
        run: |
          tar -czvf dist.tar.gz ./dist ./prisma package.json pnpm-lock.yaml

      - name: Copy Dist Archive to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: 'dist.tar.gz'
          target: '/root/kantt-api'

      - name: Deploy on Server
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EMAIL: ${{ secrets.EMAIL }}
          EMAIL_CONFIRMATION_URL: ${{ secrets.EMAIL_CONFIRMATION_URL }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          JWT_EXPIRATION_TIME_SEC: ${{ secrets.JWT_EXPIRATION_TIME_SEC }}
          JWT_RT_EXPIRATION_TIME_SEC: ${{ secrets.JWT_RT_EXPIRATION_TIME_SEC }}
          JWT_RT_SECRET: ${{ secrets.JWT_RT_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_VERIFICATION_TOKEN_EXPIRATION_TIME: ${{ secrets.JWT_VERIFICATION_TOKEN_EXPIRATION_TIME }}
          JWT_VERIFICATION_TOKEN_SECRET: ${{ secrets.JWT_VERIFICATION_TOKEN_SECRET }}
          PASSWORD_RESET_URL: ${{ secrets.PASSWORD_RESET_URL }}
          REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}

        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export PATH="/root/.nvm/versions/node/v18.19.0/bin:$PATH"
            source ~/.bashrc
            tar -xzvf /root/kantt-api/dist.tar.gz -C /root/kantt-api
            cd /root/kantt-api
            pnpm install --prod
            pnpm db:generate
            pm2 kill
            pm2 start pnpm --name "kantt-api" -- run start:prod
