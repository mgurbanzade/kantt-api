scalar Json

type Resource {
  id: Int
  uuid: String
  title: String
  project: Project
  projectId: Int
  taskId: Int
  task: Task
  contentJSON: Json
  contentHTML: String
  subResources: [Resource]
  parentId: Int
  parent: Resource
  isRoot: Boolean
  isArchived: Boolean
  emoji: String
  author: User
  authorId: Int
}

input CreateResourceInput {
  title: String
  contentJSON: Json!
  contentHTML: String!
}

input ConnectResourceInput {
  projectId: Int
  taskId: Int
  parentId: Int
}

input UpdateResourceInput {
  title: String
  emoji: String
  contentJSON: Json
  contentHTML: String
}

input ResourceWhereInput {
  id: Int
  uuid: String
  isRoot: Boolean
  projectId: Int
  taskId: Int
  parentId: Int
}

type Query {
  getAllResources(where: ResourceWhereInput!): [Resource]!
  getResource(where: ResourceWhereInput!): Resource
  getArchivedResources: [Resource]!
}

type Mutation {
  createResource(
    createResourceInput: CreateResourceInput!
    connectResourceInput: ConnectResourceInput!
  ): Resource!
  updateResource(
    uuid: String!
    updateResourceInput: UpdateResourceInput!
  ): Resource!
  removeResource(uuid: String!): Resource
  archiveResource(uuid: String!): Resource
  unarchiveResource(uuid: String!): Resource
}
